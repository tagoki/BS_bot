import telebot
from telebot import types
import sys
from battles.one_s.all_balltles_one_s import ALL_BATTLES
from links.links_for_projects.links_projects import BSB_LINK, BST_LINK, BSN_LINK
import os
from colorama import Fore
from art import tprint
from banner_choice import banner
sys.path.append('/home/haku/BS')

lbs = tprint('launcher   Brilliant   segments')

print(banner)

choice_operations = int(input('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –æ–ø–µ—Ä–∞—Ü–∏:\n'))

if choice_operations == 1:
    TOKIN = input('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —Å–≤–æ–π API —Ç–æ–∫–µ–Ω –æ—Ç BotdFather:\n')
elif choice_operations == 2:
    print('https://t.me/+qYRwfhNobn8xOTI6')
    exit()
else:
    print(Fore.RED +'–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫! –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –≤ –≤–≤–µ–¥–∏—Ç–µ –≤–∞–ª–∏–¥–Ω—ã–π –Ω–æ–º–µ—Ä!')


try:
   bot = telebot.TeleBot(TOKIN)
except Exception:
    print(Fore.RED + "–¢–æ–∫–∏–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –∏ –≤–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω —Å–Ω–æ–≤–∞.")
    exit()


@bot.message_handler(commands=['start'])              
def start_bot(message):
    bot.send_message(message.chat.id, f'''üåü –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º –≤–∞—Å, {message.from_user.first_name} ! üåü\n–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –∫–∞–Ω–∞–ª—É Briliant segments –∏ —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—à–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–∞—Ö.\nüí° –ß—Ç–æ –º–æ–∂–µ—Ç —Å–¥–µ–ª–∞—Ç—å —ç—Ç–æ—Ç –±–æ—Ç?\n -–í—ã–¥–∞–≤–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ —É—á–∞—Å—Ç–Ω–∏–∫–∞—Ö\n -–í—ã–¥–∞–≤–∞—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ –Ω–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã\n -–î–µ–ª–∏—Ç—å—Å—è —Ç–∞–±–ª–∏—Ü–æ–π —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –±–∞—Ç–ª–æ–≤''')

@bot.message_handler(commands=['all_projects'])
def projects(message):
    bot.send_message(message.chat.id, f'''–£ –Ω–∞—Å –µ—Å—Ç—å 3 –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞:\n\n<a href="{BSB_LINK}">BSB</a> - —ç—Ç–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞, –≥–¥–µ –ø—Ä–æ—Ö–æ–¥—è—Ç —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –¥–µ–±–∞—Ç—ã –∏ –¥–∏—Å–∫—É—Å—Å–∏–∏, –∞ —Ç–∞–∫–∂–µ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –±–∞—Ç–ª—ã. –ó–¥–µ—Å—å —É—á–∞—Å—Ç–Ω–∏–∫–∏ –º–æ–≥—É—Ç –æ–±–º–µ–Ω–∏–≤–∞—Ç—å—Å—è –º–Ω–µ–Ω–∏—è–º–∏ –∏ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏—è—Ö –Ω–∞ —Å–∞–º—ã–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–µ–º—ã.\n\n<a href="{BST_LINK}">BST</a> ‚Äî —ç—Ç–æ —Ñ–æ—Ä—É–º, –≥–¥–µ –ø—É–±–ª–∏–∫—É—é—Ç—Å—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ –ø–æ—Å—Ç—ã –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–µ–º—ã, –Ω–∞—á–∏–Ω–∞—è –æ—Ç –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ –∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞—è –∫—Ä–∏–º–∏–Ω–∞–ª–∏—Å—Ç–∏–∫–æ–π. –£ –Ω–∞—Å –≤—ã –Ω–∞–π–¥–µ—Ç–µ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –æ–±—Å—É–∂–¥–µ–Ω–∏—è, –ø–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –º–Ω–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤. –ú—ã —Å—Ç—Ä–µ–º–∏–º—Å—è —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –æ–±–º–µ–Ω–∞ –∑–Ω–∞–Ω–∏—è–º–∏ –∏ –º–Ω–µ–Ω–∏—è–º–∏, –≥–¥–µ –∫–∞–∂–¥—ã–π –º–æ–∂–µ—Ç –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º –æ–ø—ã—Ç–æ–º –∏ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–º –µ–≥–æ —Ç–µ–º–∞–º.\n\n<a href="{BSN_LINK}">BSN</a> ‚Äî —ç—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–π –Ω–æ–≤–æ—Å—Ç–Ω–æ–π –∫–∞–Ω–∞–ª, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –ø—É–±–ª–∏–∫—É—é—Ç—Å—è –≥–ª–∞–≤–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –Ω–∞—à–µ–≥–æ –∫–æ–º—å—é–Ω–∏—Ç–∏. –ó–¥–µ—Å—å –≤—ã –Ω–∞–π–¥–µ—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–±—ã—Ç–∏—è—Ö, –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –Ω–∞—à–∏–º —Å–æ–æ–±—â–µ—Å—Ç–≤–æ–º. –ú—ã —Å—Ç—Ä–µ–º–∏–º—Å—è –¥–µ—Ä–∂–∞—Ç—å –Ω–∞—à–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫—É—Ä—Å–µ –≤—Å–µ—Ö –≤–∞–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π –∏ –¥–µ–ª–∏—Ç—å—Å—è –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º–∏ –Ω–æ–≤–æ—Å—Ç—è–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω—ã –∏ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –≤—Å–µ—Ö.\n''', disable_web_page_preview=True, parse_mode='html')

@bot.message_handler(commands=['all_table'])
def print_question(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('1', callback_data='1'))
    bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–µ–∑–æ–Ω:', reply_markup=markup)

@bot.callback_query_handler(func=lambda callback: callback.data == '1')
def print_table_bat(callback):
    bot.send_message(callback.message.chat.id, f"–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –±–∞—Ç–ª–æ–≤ –∑–∞ 1 —Å–µ–∑–æ–Ω:\n\n{ALL_BATTLES}", parse_mode='Markdown', disable_web_page_preview=True)

@bot.message_handler(commands=['stat'])
def print_question_player_statistics(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('hiro', callback_data='hiro'))
    markup.add(types.InlineKeyboardButton('shako', callback_data='shako'))
    bot.send_message(message.chat.id,'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä–æ–∫–∞:', reply_markup=markup)

@bot.callback_query_handler(func=lambda callback: callback.data in ['hiro', 'shako'])
def print_statistics_players(callback):
    if callback.data == 'hiro':
        bot.send_message(callback.message.chat.id, '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞ hiro:\nw - 0\nl - 1')
    elif callback.data == 'shako':
        bot.send_message(callback.message.chat.id, '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞ shako:\nw -1\nl-0')

@bot.message_handler(commands=['players'])
def print_playerss(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('Dizzy', callback_data='dizzy'))
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä–æ–∫–∞, —á—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω—ë–º:', reply_markup=markup)

@bot.callback_query_handler(func=lambda callback: callback.data == 'dizzy')
def print_dizzy(callback):
    bot.send_message(callback.message.chat.id, '‚óà‚îÅ‚óà‚îÅ‚óà‚îÅ‚óà‚îÅ‚óà‚óà‚îÅ‚óà‚îÅ‚óà‚îÅ‚óà‚îÅ‚óà‚óà‚îÅ‚óà‚îÅ‚óà\n\n‡≠®‚éØ player ‚éØ‡≠ß \n‚ï∞‚îà‚û§ Dizzy\n\n‡≠®‚éØ strengths ‚éØ‡≠ß \n‚ï∞‚îà‚û§Foresight\n\n‡≠®‚éØ quote ‚éØ‡≠ß\n\n‚ó§‚îÄ‚îÄ‚Ä¢~‚ùâ·ØΩ‚ùâ~‚Ä¢‚îÄ‚îÄ‚ó• \n–ó–ª—ã—Ö –ª—é–¥–µ–π –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, \n—Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Ç—è–∂–µ–ª—ã–π –æ–ø—ã—Ç –∏ –±–æ–ª—å–Ω—ã–µ –ª—é–¥–∏\n‚ó£‚îÄ‚îÄ‚Ä¢~‚ùâ·ØΩ‚ùâ~‚Ä¢‚îÄ‚îÄ‚ó¢  \n\n‚óà‚îÅ‚óà‚îÅ‚óà‚îÅ‚óà‚îÅ‚óà‚óà‚îÅ‚óà‚îÅ‚óà‚îÅ‚óà‚îÅ‚óà‚óà‚îÅ‚óà‚îÅ‚óà')


@bot.message_handler(commands=['info_events'])
def print_question_info_eventes(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('Lie on Lie', callback_data='lol'))
    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–≤–∞, –∏–≤–µ–Ω—Ç, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é', reply_markup=markup)
@bot.callback_query_handler(func=lambda callback: callback.data == 'lol')
def print_info_events(callback):
    if callback.data == 'lol':
        bot.send_message(callback.message.chat.id, 'https://t.me/fit_lieonlie')






bot.polling(none_stop=True)


if __name__ == '__main__':
    main()